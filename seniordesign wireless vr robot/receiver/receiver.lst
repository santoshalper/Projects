;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/9/2013 4:03:25 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2A3C      	GOTO       572
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0003	0x0000      	NOP
0x0004	0x0000      	NOP
0x0005	0x0000      	NOP
0x0006	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0007	0x0008      	RETURN
; end of _Delay_1us
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0008	0x301D      	MOVLW      29
0x0009	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x000A	0x0BFD      	DECFSZ     R13, 1
0x000B	0x280A      	GOTO       L_Delay_22us1
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x000C	0x0008      	RETURN
; end of _Delay_22us
_Soft_SPI_Write:
;__Lib_SoftSPI.c,21 :: 		
;__Lib_SoftSPI.c,22 :: 		
0x000D	0x3080      	MOVLW      128
0x000E	0x0020      	MOVLB      0
0x000F	0x00D7      	MOVWF      Soft_SPI_Write_i_L0
;__Lib_SoftSPI.c,24 :: 		
0x0010	0x09D6      	COMF       FARG_Soft_SPI_Write_sdata, 1
;__Lib_SoftSPI.c,25 :: 		
L_Soft_SPI_Write0:
0x0011	0x0857      	MOVF       Soft_SPI_Write_i_L0, 0
0x0012	0x1903      	BTFSC      STATUS, 2
0x0013	0x2829      	GOTO       L_Soft_SPI_Write1
;__Lib_SoftSPI.c,26 :: 		
0x0014	0x0857      	MOVF       Soft_SPI_Write_i_L0, 0
0x0015	0x0556      	ANDWF      FARG_Soft_SPI_Write_sdata, 0
0x0016	0x00F1      	MOVWF      R1
0x0017	0x0871      	MOVF       R1, 0
0x0018	0x3001      	MOVLW      1
0x0019	0x1D03      	BTFSS      STATUS, 2
0x001A	0x3000      	MOVLW      0
0x001B	0x00F0      	MOVWF      R0
0x001C	0x1870      	BTFSC      R0, 0
0x001D	0x2820      	GOTO       L__Soft_SPI_Write7
0x001E	0x138E      	BCF        SoftSpi_SDO, BitPos(SoftSpi_SDO+0)
0x001F	0x2821      	GOTO       L__Soft_SPI_Write8
L__Soft_SPI_Write7:
0x0020	0x178E      	BSF        SoftSpi_SDO, BitPos(SoftSpi_SDO+0)
L__Soft_SPI_Write8:
;__Lib_SoftSPI.c,27 :: 		
0x0021	0x2003      	CALL       _Delay_1us
;__Lib_SoftSPI.c,28 :: 		
0x0022	0x2003      	CALL       _Delay_1us
;__Lib_SoftSPI.c,29 :: 		
0x0023	0x170D      	BSF        SoftSpi_CLK, BitPos(SoftSpi_CLK+0)
;__Lib_SoftSPI.c,30 :: 		
0x0024	0x2008      	CALL       _Delay_22us
;__Lib_SoftSPI.c,31 :: 		
0x0025	0x130D      	BCF        SoftSpi_CLK, BitPos(SoftSpi_CLK+0)
;__Lib_SoftSPI.c,32 :: 		
0x0026	0x2008      	CALL       _Delay_22us
;__Lib_SoftSPI.c,33 :: 		
0x0027	0x36D7      	LSRF       Soft_SPI_Write_i_L0, 1
;__Lib_SoftSPI.c,34 :: 		
0x0028	0x2811      	GOTO       L_Soft_SPI_Write0
L_Soft_SPI_Write1:
;__Lib_SoftSPI.c,36 :: 		
L_end_Soft_SPI_Write:
0x0029	0x0008      	RETURN
; end of _Soft_SPI_Write
_Mul_16x16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x002A	0x0020      	MOVLB      0
;__Lib_Math.c,144 :: 		
0x002B	0x01FB      	CLRF       R11
;__Lib_Math.c,145 :: 		
0x002C	0x01FA      	CLRF       R10
;__Lib_Math.c,146 :: 		
0x002D	0x01F9      	CLRF       R9
;__Lib_Math.c,147 :: 		
0x002E	0x3080      	MOVLW      128
;__Lib_Math.c,148 :: 		
0x002F	0x00F8      	MOVWF      R8
;__Lib_Math.c,149 :: 		
0x0030	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,150 :: 		
0x0031	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,151 :: 		
0x0032	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,152 :: 		
0x0033	0x283D      	GOTO       $+10
;__Lib_Math.c,153 :: 		
0x0034	0x0874      	MOVF       R4, 0
;__Lib_Math.c,154 :: 		
0x0035	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,155 :: 		
0x0036	0x0875      	MOVF       R5, 0
;__Lib_Math.c,156 :: 		
0x0037	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,157 :: 		
0x0038	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,158 :: 		
0x0039	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,159 :: 		
0x003A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,160 :: 		
0x003B	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,161 :: 		
0x003C	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,162 :: 		
0x003D	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,163 :: 		
0x003E	0x2845      	GOTO       $+7
;__Lib_Math.c,164 :: 		
0x003F	0x0874      	MOVF       R4, 0
;__Lib_Math.c,165 :: 		
0x0040	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,166 :: 		
0x0041	0x0875      	MOVF       R5, 0
;__Lib_Math.c,167 :: 		
0x0042	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,168 :: 		
0x0043	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,169 :: 		
0x0044	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,170 :: 		
0x0045	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,171 :: 		
0x0046	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,172 :: 		
0x0047	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,173 :: 		
0x0048	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,174 :: 		
0x0049	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,175 :: 		
0x004A	0x2830      	GOTO       $-26
;__Lib_Math.c,176 :: 		
0x004B	0x087B      	MOVF       R11, 0
;__Lib_Math.c,177 :: 		
0x004C	0x00F3      	MOVWF      R3
;__Lib_Math.c,178 :: 		
0x004D	0x087A      	MOVF       R10, 0
;__Lib_Math.c,179 :: 		
0x004E	0x00F2      	MOVWF      R2
;__Lib_Math.c,180 :: 		
0x004F	0x0879      	MOVF       R9, 0
;__Lib_Math.c,181 :: 		
0x0050	0x00F1      	MOVWF      R1
;__Lib_Math.c,182 :: 		
0x0051	0x0878      	MOVF       R8, 0
;__Lib_Math.c,183 :: 		
0x0052	0x00F0      	MOVWF      R0
;__Lib_Math.c,186 :: 		
L_end_Mul_16x16_U:
0x0053	0x0008      	RETURN
; end of _Mul_16x16_U
_Delay_10us:
;__Lib_Delays.c,11 :: 		void Delay_10us() {
;__Lib_Delays.c,12 :: 		Delay_us(10);
0x0054	0x300D      	MOVLW      13
0x0055	0x00FD      	MOVWF      R13
L_Delay_10us0:
0x0056	0x0BFD      	DECFSZ     R13, 1
0x0057	0x2856      	GOTO       L_Delay_10us0
;__Lib_Delays.c,13 :: 		}
L_end_Delay_10us:
0x0058	0x0008      	RETURN
; end of _Delay_10us
_singlewrite:
;receiver.c,125 :: 		void singlewrite(int address,int value){
;receiver.c,126 :: 		NSS = 0;
0x0059	0x0020      	MOVLB      0
0x005A	0x100E      	BCF        PORTC, 0
;receiver.c,127 :: 		soft_spi_write(address&0xff);
0x005B	0x30FF      	MOVLW      255
0x005C	0x0552      	ANDWF      FARG_singlewrite_address, 0
0x005D	0x00D6      	MOVWF      FARG_Soft_SPI_Write_sdata
0x005E	0x200D      	CALL       _Soft_SPI_Write
;receiver.c,128 :: 		soft_spi_write(value&0xff);
0x005F	0x30FF      	MOVLW      255
0x0060	0x0554      	ANDWF      FARG_singlewrite_value, 0
0x0061	0x00D6      	MOVWF      FARG_Soft_SPI_Write_sdata
0x0062	0x200D      	CALL       _Soft_SPI_Write
;receiver.c,129 :: 		NSS = 1;
0x0063	0x140E      	BSF        PORTC, 0
;receiver.c,130 :: 		}
L_end_singlewrite:
0x0064	0x0008      	RETURN
; end of _singlewrite
_PWM2_Start:
;__Lib_PWM_c53a2c6.c,51 :: 		
;__Lib_PWM_c53a2c6.c,52 :: 		
0x0065	0x0021      	MOVLB      1
0x0066	0x118E      	BCF        TRISC3_bit, 3
;__Lib_PWM_c53a2c6.c,53 :: 		
0x0067	0x0020      	MOVLB      0
0x0068	0x151C      	BSF        T2CON, 2
;__Lib_PWM_c53a2c6.c,54 :: 		
0x0069	0x300C      	MOVLW      12
0x006A	0x0025      	MOVLB      5
0x006B	0x049A      	IORWF       CCP2CON, 1
;__Lib_PWM_c53a2c6.c,55 :: 		
L_end_PWM2_Start:
0x006C	0x0008      	RETURN
; end of _PWM2_Start
_PWM1_Start:
;__Lib_PWM_c53a2c6.c,20 :: 		
;__Lib_PWM_c53a2c6.c,21 :: 		
0x006D	0x0021      	MOVLB      1
0x006E	0x128E      	BCF        TRISC5_bit, 5
;__Lib_PWM_c53a2c6.c,22 :: 		
0x006F	0x0020      	MOVLB      0
0x0070	0x151C      	BSF        T2CON, 2
;__Lib_PWM_c53a2c6.c,23 :: 		
0x0071	0x300C      	MOVLW      12
0x0072	0x0025      	MOVLB      5
0x0073	0x0493      	IORWF       CCP1CON, 1
;__Lib_PWM_c53a2c6.c,24 :: 		
L_end_PWM1_Start:
0x0074	0x0008      	RETURN
; end of _PWM1_Start
_PWM2_Set_Duty:
;__Lib_PWM_c53a2c6.c,40 :: 		
;__Lib_PWM_c53a2c6.c,44 :: 		
0x0075	0x0020      	MOVLB      0
0x0076	0x081B      	MOVF       PR2, 0
0x0077	0x3E01      	ADDLW      1
0x0078	0x00F0      	MOVWF      R0
0x0079	0x01F1      	CLRF       R1
0x007A	0x3000      	MOVLW      0
0x007B	0x3DF1      	ADDWFC     R1, 1
0x007C	0x084A      	MOVF       FARG_PWM2_Set_Duty_new_duty, 0
0x007D	0x00F4      	MOVWF      R4
0x007E	0x01F5      	CLRF       R5
0x007F	0x202A      	CALL       _Mul_16x16_U
0x0080	0x3006      	MOVLW      6
0x0081	0x00F2      	MOVWF      R2
0x0082	0x0870      	MOVF       R0, 0
0x0083	0x00F4      	MOVWF      R4
0x0084	0x0871      	MOVF       R1, 0
0x0085	0x00F5      	MOVWF      R5
0x0086	0x0872      	MOVF       R2, 0
L__PWM2_Set_Duty10:
0x0087	0x1903      	BTFSC      STATUS, 2
0x0088	0x288D      	GOTO       L__PWM2_Set_Duty11
0x0089	0x36F5      	LSRF       R5, 1
0x008A	0x0CF4      	RRF        R4, 1
0x008B	0x3EFF      	ADDLW      255
0x008C	0x2887      	GOTO       L__PWM2_Set_Duty10
L__PWM2_Set_Duty11:
;__Lib_PWM_c53a2c6.c,45 :: 		
0x008D	0x3004      	MOVLW      4
0x008E	0x00F1      	MOVWF      R1
0x008F	0x0874      	MOVF       R4, 0
0x0090	0x00F0      	MOVWF      R0
0x0091	0x0871      	MOVF       R1, 0
L__PWM2_Set_Duty12:
0x0092	0x1903      	BTFSC      STATUS, 2
0x0093	0x2897      	GOTO       L__PWM2_Set_Duty13
0x0094	0x35F0      	LSLF       R0, 1
0x0095	0x3EFF      	ADDLW      255
0x0096	0x2892      	GOTO       L__PWM2_Set_Duty12
L__PWM2_Set_Duty13:
0x0097	0x3030      	MOVLW      48
0x0098	0x0570      	ANDWF      R0, 0
0x0099	0x00F3      	MOVWF      R3
;__Lib_PWM_c53a2c6.c,46 :: 		
0x009A	0x0874      	MOVF       R4, 0
0x009B	0x00F0      	MOVWF      R0
0x009C	0x0875      	MOVF       R5, 0
0x009D	0x00F1      	MOVWF      R1
0x009E	0x36F1      	LSRF       R1, 1
0x009F	0x0CF0      	RRF        R0, 1
0x00A0	0x36F1      	LSRF       R1, 1
0x00A1	0x0CF0      	RRF        R0, 1
0x00A2	0x0870      	MOVF       R0, 0
0x00A3	0x0025      	MOVLB      5
0x00A4	0x0098      	MOVWF      CCPR2L
;__Lib_PWM_c53a2c6.c,47 :: 		
0x00A5	0x300F      	MOVLW      15
0x00A6	0x059A      	ANDWF      CCP2CON, 1
;__Lib_PWM_c53a2c6.c,48 :: 		
0x00A7	0x0873      	MOVF       R3, 0
0x00A8	0x049A      	IORWF       CCP2CON, 1
;__Lib_PWM_c53a2c6.c,49 :: 		
L_end_PWM2_Set_Duty:
0x00A9	0x0008      	RETURN
; end of _PWM2_Set_Duty
_PWM1_Init:
;__Lib_PWM_c53a2c6.c,2 :: 		
;__Lib_PWM_c53a2c6.c,3 :: 		
;__Lib_PWM_c53a2c6.c,4 :: 		
0x00AA	0x0025      	MOVLB      5
0x00AB	0x0191      	CLRF       CCPR1L
;__Lib_PWM_c53a2c6.c,5 :: 		
0x00AC	0x1213      	BCF        CCP1CON, 4
;__Lib_PWM_c53a2c6.c,6 :: 		
0x00AD	0x1293      	BCF        CCP1CON, 5
;__Lib_PWM_c53a2c6.c,7 :: 		
L_end_PWM1_Init:
0x00AE	0x0008      	RETURN
; end of _PWM1_Init
_PWM1_Set_Duty:
;__Lib_PWM_c53a2c6.c,9 :: 		
;__Lib_PWM_c53a2c6.c,13 :: 		
0x00AF	0x0020      	MOVLB      0
0x00B0	0x081B      	MOVF       PR2, 0
0x00B1	0x3E01      	ADDLW      1
0x00B2	0x00F0      	MOVWF      R0
0x00B3	0x01F1      	CLRF       R1
0x00B4	0x3000      	MOVLW      0
0x00B5	0x3DF1      	ADDWFC     R1, 1
0x00B6	0x084A      	MOVF       FARG_PWM1_Set_Duty_new_duty, 0
0x00B7	0x00F4      	MOVWF      R4
0x00B8	0x01F5      	CLRF       R5
0x00B9	0x202A      	CALL       _Mul_16x16_U
0x00BA	0x3006      	MOVLW      6
0x00BB	0x00F2      	MOVWF      R2
0x00BC	0x0870      	MOVF       R0, 0
0x00BD	0x00F4      	MOVWF      R4
0x00BE	0x0871      	MOVF       R1, 0
0x00BF	0x00F5      	MOVWF      R5
0x00C0	0x0872      	MOVF       R2, 0
L__PWM1_Set_Duty2:
0x00C1	0x1903      	BTFSC      STATUS, 2
0x00C2	0x28C7      	GOTO       L__PWM1_Set_Duty3
0x00C3	0x36F5      	LSRF       R5, 1
0x00C4	0x0CF4      	RRF        R4, 1
0x00C5	0x3EFF      	ADDLW      255
0x00C6	0x28C1      	GOTO       L__PWM1_Set_Duty2
L__PWM1_Set_Duty3:
;__Lib_PWM_c53a2c6.c,14 :: 		
0x00C7	0x3004      	MOVLW      4
0x00C8	0x00F1      	MOVWF      R1
0x00C9	0x0874      	MOVF       R4, 0
0x00CA	0x00F0      	MOVWF      R0
0x00CB	0x0871      	MOVF       R1, 0
L__PWM1_Set_Duty4:
0x00CC	0x1903      	BTFSC      STATUS, 2
0x00CD	0x28D1      	GOTO       L__PWM1_Set_Duty5
0x00CE	0x35F0      	LSLF       R0, 1
0x00CF	0x3EFF      	ADDLW      255
0x00D0	0x28CC      	GOTO       L__PWM1_Set_Duty4
L__PWM1_Set_Duty5:
0x00D1	0x3030      	MOVLW      48
0x00D2	0x0570      	ANDWF      R0, 0
0x00D3	0x00F3      	MOVWF      R3
;__Lib_PWM_c53a2c6.c,15 :: 		
0x00D4	0x0874      	MOVF       R4, 0
0x00D5	0x00F0      	MOVWF      R0
0x00D6	0x0875      	MOVF       R5, 0
0x00D7	0x00F1      	MOVWF      R1
0x00D8	0x36F1      	LSRF       R1, 1
0x00D9	0x0CF0      	RRF        R0, 1
0x00DA	0x36F1      	LSRF       R1, 1
0x00DB	0x0CF0      	RRF        R0, 1
0x00DC	0x0870      	MOVF       R0, 0
0x00DD	0x0025      	MOVLB      5
0x00DE	0x0091      	MOVWF      CCPR1L
;__Lib_PWM_c53a2c6.c,16 :: 		
0x00DF	0x300F      	MOVLW      15
0x00E0	0x0593      	ANDWF      CCP1CON, 1
;__Lib_PWM_c53a2c6.c,17 :: 		
0x00E1	0x0873      	MOVF       R3, 0
0x00E2	0x0493      	IORWF       CCP1CON, 1
;__Lib_PWM_c53a2c6.c,18 :: 		
L_end_PWM1_Set_Duty:
0x00E3	0x0008      	RETURN
; end of _PWM1_Set_Duty
_PWM2_Init:
;__Lib_PWM_c53a2c6.c,33 :: 		
;__Lib_PWM_c53a2c6.c,34 :: 		
;__Lib_PWM_c53a2c6.c,35 :: 		
0x00E4	0x0025      	MOVLB      5
0x00E5	0x0198      	CLRF       CCPR2L
;__Lib_PWM_c53a2c6.c,36 :: 		
0x00E6	0x121A      	BCF        CCP2CON, 4
;__Lib_PWM_c53a2c6.c,37 :: 		
0x00E7	0x129A      	BCF        CCP2CON, 5
;__Lib_PWM_c53a2c6.c,38 :: 		
L_end_PWM2_Init:
0x00E8	0x0008      	RETURN
; end of _PWM2_Init
_clear_fifo:
;receiver.c,143 :: 		void clear_fifo(void) {
;receiver.c,144 :: 		singlewrite(OPMODEADD,STDBY);
0x00E9	0x3081      	MOVLW      129
0x00EA	0x0020      	MOVLB      0
0x00EB	0x00D2      	MOVWF      FARG_singlewrite_address
0x00EC	0x01D3      	CLRF       FARG_singlewrite_address+1
0x00ED	0x3084      	MOVLW      132
0x00EE	0x00D4      	MOVWF      FARG_singlewrite_value
0x00EF	0x01D5      	CLRF       FARG_singlewrite_value+1
0x00F0	0x2059      	CALL       _singlewrite
;receiver.c,145 :: 		singlewrite(OPMODEADD,RX);
0x00F1	0x3081      	MOVLW      129
0x00F2	0x00D2      	MOVWF      FARG_singlewrite_address
0x00F3	0x01D3      	CLRF       FARG_singlewrite_address+1
0x00F4	0x3090      	MOVLW      144
0x00F5	0x00D4      	MOVWF      FARG_singlewrite_value
0x00F6	0x01D5      	CLRF       FARG_singlewrite_value+1
0x00F7	0x2059      	CALL       _singlewrite
;receiver.c,146 :: 		}
L_end_clear_fifo:
0x00F8	0x0008      	RETURN
; end of _clear_fifo
_Soft_SPI_Read:
;__Lib_SoftSPI.c,38 :: 		
;__Lib_SoftSPI.c,39 :: 		
0x00F9	0x3080      	MOVLW      128
0x00FA	0x0020      	MOVLB      0
0x00FB	0x00CB      	MOVWF      Soft_SPI_Read_i_L0
;__Lib_SoftSPI.c,41 :: 		
0x00FC	0x09CA      	COMF       FARG_Soft_SPI_Read_sdata, 1
;__Lib_SoftSPI.c,42 :: 		
L_Soft_SPI_Read2:
0x00FD	0x084B      	MOVF       Soft_SPI_Read_i_L0, 0
0x00FE	0x1903      	BTFSC      STATUS, 2
0x00FF	0x291E      	GOTO       L_Soft_SPI_Read3
;__Lib_SoftSPI.c,43 :: 		
0x0100	0x084B      	MOVF       Soft_SPI_Read_i_L0, 0
0x0101	0x054A      	ANDWF      FARG_Soft_SPI_Read_sdata, 0
0x0102	0x00F1      	MOVWF      R1
0x0103	0x0871      	MOVF       R1, 0
0x0104	0x3001      	MOVLW      1
0x0105	0x1D03      	BTFSS      STATUS, 2
0x0106	0x3000      	MOVLW      0
0x0107	0x00F0      	MOVWF      R0
0x0108	0x1870      	BTFSC      R0, 0
0x0109	0x290C      	GOTO       L__Soft_SPI_Read10
0x010A	0x138E      	BCF        SoftSpi_SDO, BitPos(SoftSpi_SDO+0)
0x010B	0x290D      	GOTO       L__Soft_SPI_Read11
L__Soft_SPI_Read10:
0x010C	0x178E      	BSF        SoftSpi_SDO, BitPos(SoftSpi_SDO+0)
L__Soft_SPI_Read11:
;__Lib_SoftSPI.c,44 :: 		
0x010D	0x2003      	CALL       _Delay_1us
;__Lib_SoftSPI.c,45 :: 		
0x010E	0x2003      	CALL       _Delay_1us
;__Lib_SoftSPI.c,46 :: 		
0x010F	0x170D      	BSF        SoftSpi_CLK, BitPos(SoftSpi_CLK+0)
;__Lib_SoftSPI.c,47 :: 		
0x0110	0x2054      	CALL       _Delay_10us
;__Lib_SoftSPI.c,49 :: 		
0x0111	0x084B      	MOVF       Soft_SPI_Read_i_L0, 0
0x0112	0x04CA      	IORWF       FARG_Soft_SPI_Read_sdata, 1
;__Lib_SoftSPI.c,50 :: 		
0x0113	0x1A0D      	BTFSC      SoftSpi_SDI, BitPos(SoftSpi_SDI+0)
0x0114	0x2919      	GOTO       L_Soft_SPI_Read4
;__Lib_SoftSPI.c,51 :: 		
0x0115	0x094B      	COMF       Soft_SPI_Read_i_L0, 0
0x0116	0x00F0      	MOVWF      R0
0x0117	0x0870      	MOVF       R0, 0
0x0118	0x05CA      	ANDWF      FARG_Soft_SPI_Read_sdata, 1
L_Soft_SPI_Read4:
;__Lib_SoftSPI.c,53 :: 		
0x0119	0x2054      	CALL       _Delay_10us
;__Lib_SoftSPI.c,54 :: 		
0x011A	0x130D      	BCF        SoftSpi_CLK, BitPos(SoftSpi_CLK+0)
;__Lib_SoftSPI.c,55 :: 		
0x011B	0x2008      	CALL       _Delay_22us
;__Lib_SoftSPI.c,56 :: 		
0x011C	0x36CB      	LSRF       Soft_SPI_Read_i_L0, 1
;__Lib_SoftSPI.c,57 :: 		
0x011D	0x28FD      	GOTO       L_Soft_SPI_Read2
L_Soft_SPI_Read3:
;__Lib_SoftSPI.c,58 :: 		
0x011E	0x084A      	MOVF       FARG_Soft_SPI_Read_sdata, 0
0x011F	0x00F0      	MOVWF      R0
;__Lib_SoftSPI.c,59 :: 		
L_end_Soft_SPI_Read:
0x0120	0x0008      	RETURN
; end of _Soft_SPI_Read
_burstwrite:
;receiver.c,131 :: 		void burstwrite(int address, int* value, int length) {
;receiver.c,132 :: 		int i = 0;
0x0121	0x0020      	MOVLB      0
0x0122	0x01D0      	CLRF       burstwrite_i_L0
0x0123	0x01D1      	CLRF       burstwrite_i_L0+1
;receiver.c,134 :: 		NSS = 0;
0x0124	0x100E      	BCF        PORTC, 0
;receiver.c,135 :: 		soft_spi_write(address&0xff);
0x0125	0x30FF      	MOVLW      255
0x0126	0x054A      	ANDWF      FARG_burstwrite_address, 0
0x0127	0x00D6      	MOVWF      FARG_Soft_SPI_Write_sdata
0x0128	0x200D      	CALL       _Soft_SPI_Write
;receiver.c,136 :: 		while(i<length) {
L_burstwrite6:
0x0129	0x3080      	MOVLW      128
0x012A	0x0651      	XORWF      burstwrite_i_L0+1, 0
0x012B	0x00F0      	MOVWF      R0
0x012C	0x3080      	MOVLW      128
0x012D	0x064F      	XORWF      FARG_burstwrite_length+1, 0
0x012E	0x0270      	SUBWF      R0, 0
0x012F	0x1D03      	BTFSS      STATUS, 2
0x0130	0x2933      	GOTO       L__burstwrite38
0x0131	0x084E      	MOVF       FARG_burstwrite_length, 0
0x0132	0x0250      	SUBWF      burstwrite_i_L0, 0
L__burstwrite38:
0x0133	0x1803      	BTFSC      STATUS, 0
0x0134	0x2949      	GOTO       L_burstwrite7
;receiver.c,137 :: 		j = value+i;
0x0135	0x0850      	MOVF       burstwrite_i_L0, 0
0x0136	0x00F0      	MOVWF      R0
0x0137	0x0851      	MOVF       burstwrite_i_L0+1, 0
0x0138	0x00F1      	MOVWF      R1
0x0139	0x35F0      	LSLF       R0, 1
0x013A	0x0DF1      	RLF        R1, 1
0x013B	0x0870      	MOVF       R0, 0
0x013C	0x074C      	ADDWF      FARG_burstwrite_value, 0
0x013D	0x0084      	MOVWF      FSR0
0x013E	0x0871      	MOVF       R1, 0
0x013F	0x3D4D      	ADDWFC     FARG_burstwrite_value+1, 0
0x0140	0x0085      	MOVWF      FSR0H
;receiver.c,138 :: 		soft_spi_write(*j&0xff);
0x0141	0x30FF      	MOVLW      255
0x0142	0x0500      	ANDWF      INDF0, 0
0x0143	0x00D6      	MOVWF      FARG_Soft_SPI_Write_sdata
0x0144	0x200D      	CALL       _Soft_SPI_Write
;receiver.c,139 :: 		i++;
0x0145	0x0AD0      	INCF       burstwrite_i_L0, 1
0x0146	0x1903      	BTFSC      STATUS, 2
0x0147	0x0AD1      	INCF       burstwrite_i_L0+1, 1
;receiver.c,140 :: 		}
0x0148	0x2929      	GOTO       L_burstwrite6
L_burstwrite7:
;receiver.c,141 :: 		NSS = 1;
0x0149	0x140E      	BSF        PORTC, 0
;receiver.c,142 :: 		}
L_end_burstwrite:
0x014A	0x0008      	RETURN
; end of _burstwrite
_UART1_Init:
;__Lib_UART_b75.c,12 :: 		
;__Lib_UART_b75.c,15 :: 		
0x014B	0x300B      	MOVLW      _UART1_Write
0x014C	0x0020      	MOVLB      0
0x014D	0x00A4      	MOVWF      _UART_Wr_Ptr
0x014E	0x3002      	MOVLW      hi_addr(_UART1_Write)
0x014F	0x00A5      	MOVWF      _UART_Wr_Ptr+1
0x0150	0x303C      	MOVLW      FARG_UART1_Write_data_
0x0151	0x00A6      	MOVWF      _UART_Wr_Ptr+2
0x0152	0x3000      	MOVLW      hi_addr(FARG_UART1_Write_data_)
0x0153	0x00A7      	MOVWF      _UART_Wr_Ptr+3
;__Lib_UART_b75.c,16 :: 		
0x0154	0x30FF      	MOVLW      _UART1_Read
0x0155	0x00A0      	MOVWF      _UART_Rd_Ptr
0x0156	0x30FF      	MOVLW      hi_addr(_UART1_Read)
0x0157	0x00A1      	MOVWF      _UART_Rd_Ptr+1
0x0158	0x3000      	MOVLW      0
0x0159	0x00A2      	MOVWF      _UART_Rd_Ptr+2
0x015A	0x3000      	MOVLW      0
0x015B	0x00A3      	MOVWF      _UART_Rd_Ptr+3
;__Lib_UART_b75.c,17 :: 		
0x015C	0x30FF      	MOVLW      _UART1_Data_Ready
0x015D	0x00AC      	MOVWF      _UART_Rdy_Ptr
0x015E	0x30FF      	MOVLW      hi_addr(_UART1_Data_Ready)
0x015F	0x00AD      	MOVWF      _UART_Rdy_Ptr+1
0x0160	0x3000      	MOVLW      0
0x0161	0x00AE      	MOVWF      _UART_Rdy_Ptr+2
0x0162	0x3000      	MOVLW      0
0x0163	0x00AF      	MOVWF      _UART_Rdy_Ptr+3
;__Lib_UART_b75.c,18 :: 		
0x0164	0x30FF      	MOVLW      _UART1_Tx_Idle
0x0165	0x00A8      	MOVWF      _UART_Tx_Idle_Ptr
0x0166	0x30FF      	MOVLW      hi_addr(_UART1_Tx_Idle)
0x0167	0x00A9      	MOVWF      _UART_Tx_Idle_Ptr+1
0x0168	0x3000      	MOVLW      0
0x0169	0x00AA      	MOVWF      _UART_Tx_Idle_Ptr+2
0x016A	0x3000      	MOVLW      0
0x016B	0x00AB      	MOVWF      _UART_Tx_Idle_Ptr+3
;__Lib_UART_b75.c,20 :: 		
0x016C	0x0023      	MOVLB      3
0x016D	0x169E      	BSF        TXSTA, 5
;__Lib_UART_b75.c,21 :: 		
0x016E	0x3090      	MOVLW      144
0x016F	0x009D      	MOVWF      RCSTA
;__Lib_UART_b75.c,22 :: 		
0x0170	0x0021      	MOVLB      1
0x0171	0x168D      	BSF        TRISB5_bit, 5
;__Lib_UART_b75.c,23 :: 		
0x0172	0x138D      	BCF        TRISB7_bit, 7
;__Lib_UART_b75.c,24 :: 		
L_UART1_Init0:
0x0173	0x0020      	MOVLB      0
0x0174	0x1E91      	BTFSS      PIR1, 5
0x0175	0x297A      	GOTO       L_UART1_Init1
;__Lib_UART_b75.c,25 :: 		
0x0176	0x0023      	MOVLB      3
0x0177	0x0819      	MOVF       RCREG, 0
0x0178	0x00F0      	MOVWF      R0
0x0179	0x2973      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_b75.c,26 :: 		
L_end_UART1_Init:
0x017A	0x0008      	RETURN
; end of _UART1_Init
_receive:
;receiver.c,161 :: 		void receive(int* info) {
;receiver.c,163 :: 		int buffer= 0;
0x017B	0x0020      	MOVLB      0
0x017C	0x01C0      	CLRF       receive_buffer_L0
0x017D	0x01C1      	CLRF       receive_buffer_L0+1
;receiver.c,165 :: 		j = info;
0x017E	0x083C      	MOVF       FARG_receive_info, 0
0x017F	0x00BE      	MOVWF      receive_j_L0
0x0180	0x083D      	MOVF       FARG_receive_info+1, 0
0x0181	0x00BF      	MOVWF      receive_j_L0+1
;receiver.c,167 :: 		NSS = 0;
0x0182	0x100E      	BCF        PORTC, 0
;receiver.c,168 :: 		while(PayloadReady == 0);
L_receive8:
0x0183	0x1A8C      	BTFSC      PORTA, 5
0x0184	0x2986      	GOTO       L_receive9
0x0185	0x2983      	GOTO       L_receive8
L_receive9:
;receiver.c,169 :: 		soft_spi_write(READ_FROM_FIFO&0xff);
0x0186	0x01D6      	CLRF       FARG_Soft_SPI_Write_sdata
0x0187	0x200D      	CALL       _Soft_SPI_Write
;receiver.c,170 :: 		while(j<info+PAYLOADSIZE) {
L_receive10:
0x0188	0x300A      	MOVLW      10
0x0189	0x073C      	ADDWF      FARG_receive_info, 0
0x018A	0x00F1      	MOVWF      R1
0x018B	0x3000      	MOVLW      0
0x018C	0x3D3D      	ADDWFC     FARG_receive_info+1, 0
0x018D	0x00F2      	MOVWF      R2
0x018E	0x0872      	MOVF       R2, 0
0x018F	0x023F      	SUBWF      receive_j_L0+1, 0
0x0190	0x1D03      	BTFSS      STATUS, 2
0x0191	0x2994      	GOTO       L__receive42
0x0192	0x0871      	MOVF       R1, 0
0x0193	0x023E      	SUBWF      receive_j_L0, 0
L__receive42:
0x0194	0x1803      	BTFSC      STATUS, 0
0x0195	0x29AA      	GOTO       L_receive11
;receiver.c,171 :: 		*j = (int) soft_spi_Read(buffer&0xff);
0x0196	0x30FF      	MOVLW      255
0x0197	0x0540      	ANDWF      receive_buffer_L0, 0
0x0198	0x00CA      	MOVWF      FARG_Soft_SPI_Read_sdata
0x0199	0x20F9      	CALL       _Soft_SPI_Read
0x019A	0x3000      	MOVLW      0
0x019B	0x00F1      	MOVWF      R1
0x019C	0x083E      	MOVF       receive_j_L0, 0
0x019D	0x0086      	MOVWF      FSR1
0x019E	0x083F      	MOVF       receive_j_L0+1, 0
0x019F	0x0087      	MOVWF      FSR1H
0x01A0	0x0870      	MOVF       R0, 0
0x01A1	0x0081      	MOVWF      INDF1
0x01A2	0x0871      	MOVF       R1, 0
0x01A3	0x3141      	ADDFSR     1, 1
0x01A4	0x0081      	MOVWF      INDF1
;receiver.c,172 :: 		j++;
0x01A5	0x3002      	MOVLW      2
0x01A6	0x07BE      	ADDWF      receive_j_L0, 1
0x01A7	0x3000      	MOVLW      0
0x01A8	0x3DBF      	ADDWFC     receive_j_L0+1, 1
;receiver.c,173 :: 		}
0x01A9	0x2988      	GOTO       L_receive10
L_receive11:
;receiver.c,174 :: 		clear_fifo();
0x01AA	0x20E9      	CALL       _clear_fifo
;receiver.c,175 :: 		NSS=1;
0x01AB	0x140E      	BSF        PORTC, 0
;receiver.c,176 :: 		}
L_end_receive:
0x01AC	0x0008      	RETURN
; end of _receive
_init_receiver:
;receiver.c,148 :: 		void init_receiver(void){
;receiver.c,149 :: 		int freq[3] = {MSB433,MID433,LSB433};
0x01AD	0x306C      	MOVLW      108
0x01AE	0x0020      	MOVLB      0
0x01AF	0x00BC      	MOVWF      init_receiver_freq_L0
0x01B0	0x3000      	MOVLW      0
0x01B1	0x00BD      	MOVWF      init_receiver_freq_L0+1
0x01B2	0x3080      	MOVLW      128
0x01B3	0x00BE      	MOVWF      init_receiver_freq_L0+2
0x01B4	0x3000      	MOVLW      0
0x01B5	0x00BF      	MOVWF      init_receiver_freq_L0+3
0x01B6	0x01C0      	CLRF       init_receiver_freq_L0+4
0x01B7	0x01C1      	CLRF       init_receiver_freq_L0+5
0x01B8	0x3080      	MOVLW      128
0x01B9	0x00C2      	MOVWF      init_receiver_sync_L0
0x01BA	0x3000      	MOVLW      0
0x01BB	0x00C3      	MOVWF      init_receiver_sync_L0+1
0x01BC	0x30DB      	MOVLW      219
0x01BD	0x00C4      	MOVWF      init_receiver_sync_L0+2
0x01BE	0x3000      	MOVLW      0
0x01BF	0x00C5      	MOVWF      init_receiver_sync_L0+3
0x01C0	0x3068      	MOVLW      104
0x01C1	0x00C6      	MOVWF      init_receiver_datarate_L0
0x01C2	0x3000      	MOVLW      0
0x01C3	0x00C7      	MOVWF      init_receiver_datarate_L0+1
0x01C4	0x302B      	MOVLW      43
0x01C5	0x00C8      	MOVWF      init_receiver_datarate_L0+2
0x01C6	0x3000      	MOVLW      0
0x01C7	0x00C9      	MOVWF      init_receiver_datarate_L0+3
;receiver.c,152 :: 		burstwrite(CARRIERADD,freq,3);
0x01C8	0x3087      	MOVLW      135
0x01C9	0x00CA      	MOVWF      FARG_burstwrite_address
0x01CA	0x01CB      	CLRF       FARG_burstwrite_address+1
0x01CB	0x303C      	MOVLW      init_receiver_freq_L0
0x01CC	0x00CC      	MOVWF      FARG_burstwrite_value
0x01CD	0x3000      	MOVLW      hi_addr(init_receiver_freq_L0)
0x01CE	0x00CD      	MOVWF      FARG_burstwrite_value+1
0x01CF	0x3003      	MOVLW      3
0x01D0	0x00CE      	MOVWF      FARG_burstwrite_length
0x01D1	0x3000      	MOVLW      0
0x01D2	0x00CF      	MOVWF      FARG_burstwrite_length+1
0x01D3	0x2121      	CALL       _burstwrite
;receiver.c,153 :: 		burstwrite(DATARATE,datarate,2);
0x01D4	0x3083      	MOVLW      131
0x01D5	0x00CA      	MOVWF      FARG_burstwrite_address
0x01D6	0x01CB      	CLRF       FARG_burstwrite_address+1
0x01D7	0x3046      	MOVLW      init_receiver_datarate_L0
0x01D8	0x00CC      	MOVWF      FARG_burstwrite_value
0x01D9	0x3000      	MOVLW      hi_addr(init_receiver_datarate_L0)
0x01DA	0x00CD      	MOVWF      FARG_burstwrite_value+1
0x01DB	0x3002      	MOVLW      2
0x01DC	0x00CE      	MOVWF      FARG_burstwrite_length
0x01DD	0x3000      	MOVLW      0
0x01DE	0x00CF      	MOVWF      FARG_burstwrite_length+1
0x01DF	0x2121      	CALL       _burstwrite
;receiver.c,154 :: 		singlewrite(OPMODEADD,STDBY);
0x01E0	0x3081      	MOVLW      129
0x01E1	0x00D2      	MOVWF      FARG_singlewrite_address
0x01E2	0x01D3      	CLRF       FARG_singlewrite_address+1
0x01E3	0x3084      	MOVLW      132
0x01E4	0x00D4      	MOVWF      FARG_singlewrite_value
0x01E5	0x01D5      	CLRF       FARG_singlewrite_value+1
0x01E6	0x2059      	CALL       _singlewrite
;receiver.c,155 :: 		burstwrite(SYNC_WORD,sync,2);
0x01E7	0x30AE      	MOVLW      174
0x01E8	0x00CA      	MOVWF      FARG_burstwrite_address
0x01E9	0x01CB      	CLRF       FARG_burstwrite_address+1
0x01EA	0x3042      	MOVLW      init_receiver_sync_L0
0x01EB	0x00CC      	MOVWF      FARG_burstwrite_value
0x01EC	0x3000      	MOVLW      hi_addr(init_receiver_sync_L0)
0x01ED	0x00CD      	MOVWF      FARG_burstwrite_value+1
0x01EE	0x3002      	MOVLW      2
0x01EF	0x00CE      	MOVWF      FARG_burstwrite_length
0x01F0	0x3000      	MOVLW      0
0x01F1	0x00CF      	MOVWF      FARG_burstwrite_length+1
0x01F2	0x2121      	CALL       _burstwrite
;receiver.c,156 :: 		singlewrite(PACKET_LENGTH,PAYLOADSIZE);
0x01F3	0x30B8      	MOVLW      184
0x01F4	0x00D2      	MOVWF      FARG_singlewrite_address
0x01F5	0x01D3      	CLRF       FARG_singlewrite_address+1
0x01F6	0x3005      	MOVLW      5
0x01F7	0x00D4      	MOVWF      FARG_singlewrite_value
0x01F8	0x3000      	MOVLW      0
0x01F9	0x00D5      	MOVWF      FARG_singlewrite_value+1
0x01FA	0x2059      	CALL       _singlewrite
;receiver.c,157 :: 		singlewrite(SETIO,MODE1);
0x01FB	0x30A5      	MOVLW      165
0x01FC	0x00D2      	MOVWF      FARG_singlewrite_address
0x01FD	0x01D3      	CLRF       FARG_singlewrite_address+1
0x01FE	0x3040      	MOVLW      64
0x01FF	0x00D4      	MOVWF      FARG_singlewrite_value
0x0200	0x3000      	MOVLW      0
0x0201	0x00D5      	MOVWF      FARG_singlewrite_value+1
0x0202	0x2059      	CALL       _singlewrite
;receiver.c,158 :: 		singlewrite(OPMODEADD,RX);
0x0203	0x3081      	MOVLW      129
0x0204	0x00D2      	MOVWF      FARG_singlewrite_address
0x0205	0x01D3      	CLRF       FARG_singlewrite_address+1
0x0206	0x3090      	MOVLW      144
0x0207	0x00D4      	MOVWF      FARG_singlewrite_value
0x0208	0x01D5      	CLRF       FARG_singlewrite_value+1
0x0209	0x2059      	CALL       _singlewrite
;receiver.c,160 :: 		}
L_end_init_receiver:
0x020A	0x0008      	RETURN
; end of _init_receiver
_UART1_Write:
;__Lib_UART_b75.c,53 :: 		
;__Lib_UART_b75.c,54 :: 		
L_UART1_Write3:
0x020B	0x0023      	MOVLB      3
0x020C	0x189E      	BTFSC      TXSTA, 1
0x020D	0x2A10      	GOTO       L_UART1_Write4
;__Lib_UART_b75.c,55 :: 		
0x020E	0x0000      	NOP
0x020F	0x2A0B      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_b75.c,56 :: 		
0x0210	0x0020      	MOVLB      0
0x0211	0x083C      	MOVF       FARG_UART1_Write_data_, 0
0x0212	0x0023      	MOVLB      3
0x0213	0x009A      	MOVWF      TXREG
;__Lib_UART_b75.c,57 :: 		
L_end_UART1_Write:
0x0214	0x0008      	RETURN
; end of _UART1_Write
___CC2DW:
;__Lib_System.c,71 :: 		
;__Lib_System.c,73 :: 		
_CC2DL_Loop1:
;__Lib_System.c,74 :: 		
0x0215	0x0012      	MOVIW      0, 2
;__Lib_System.c,75 :: 		
0x0216	0x001E      	MOVWI      FSR1++ 
;__Lib_System.c,76 :: 		
0x0217	0x03F0      	DECF       R0, 1
;__Lib_System.c,77 :: 		
0x0218	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,78 :: 		
0x0219	0x2A15      	GOTO       _CC2DL_Loop1
;__Lib_System.c,79 :: 		
0x021A	0x03F1      	DECF       R1, 1
;__Lib_System.c,80 :: 		
0x021B	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,81 :: 		
0x021C	0x2A15      	GOTO       _CC2DL_Loop1
;__Lib_System.c,83 :: 		
L_end___CC2DW:
0x021D	0x0008      	RETURN
; end of ___CC2DW
_Soft_SPI_Init:
;__Lib_SoftSPI.c,11 :: 		
;__Lib_SoftSPI.c,12 :: 		
0x021E	0x0021      	MOVLB      1
0x021F	0x160D      	BSF        SoftSpi_SDI_Direction, BitPos(SoftSpi_SDI_Direction+0)
;__Lib_SoftSPI.c,13 :: 		
0x0220	0x138E      	BCF        SoftSpi_SDO_Direction, BitPos(SoftSpi_SDO_Direction+0)
;__Lib_SoftSPI.c,14 :: 		
0x0221	0x130D      	BCF        SoftSpi_CLK_Direction, BitPos(SoftSpi_CLK_Direction+0)
;__Lib_SoftSPI.c,16 :: 		
0x0222	0x0020      	MOVLB      0
0x0223	0x120D      	BCF        SoftSpi_SDI, BitPos(SoftSpi_SDI+0)
;__Lib_SoftSPI.c,17 :: 		
0x0224	0x138E      	BCF        SoftSpi_SDO, BitPos(SoftSpi_SDO+0)
;__Lib_SoftSPI.c,18 :: 		
0x0225	0x130D      	BCF        SoftSpi_CLK, BitPos(SoftSpi_CLK+0)
;__Lib_SoftSPI.c,19 :: 		
L_end_Soft_SPI_Init:
0x0226	0x0008      	RETURN
; end of _Soft_SPI_Init
_init_PWM:
;receiver.c,101 :: 		void init_PWM() {
;receiver.c,102 :: 		PWM1_Init(5000);
0x0227	0x0020      	MOVLB      0
0x0228	0x141C      	BSF        T2CON, 0
0x0229	0x109C      	BCF        T2CON, 1
0x022A	0x30C7      	MOVLW      199
0x022B	0x009B      	MOVWF      PR2
0x022C	0x20AA      	CALL       _PWM1_Init
;receiver.c,103 :: 		PWM2_Init(5000);
0x022D	0x0020      	MOVLB      0
0x022E	0x141C      	BSF        T2CON, 0
0x022F	0x109C      	BCF        T2CON, 1
0x0230	0x30C7      	MOVLW      199
0x0231	0x009B      	MOVWF      PR2
0x0232	0x20E4      	CALL       _PWM2_Init
;receiver.c,104 :: 		SpeedLeft(0);
0x0233	0x0020      	MOVLB      0
0x0234	0x01CA      	CLRF       FARG_PWM1_Set_Duty_new_duty
0x0235	0x20AF      	CALL       _PWM1_Set_Duty
;receiver.c,105 :: 		SpeedRight(0);
0x0236	0x0020      	MOVLB      0
0x0237	0x01CA      	CLRF       FARG_PWM2_Set_Duty_new_duty
0x0238	0x2075      	CALL       _PWM2_Set_Duty
;receiver.c,106 :: 		PWM1_Start();
0x0239	0x206D      	CALL       _PWM1_Start
;receiver.c,107 :: 		PWM2_Start();
0x023A	0x2065      	CALL       _PWM2_Start
;receiver.c,108 :: 		}
L_end_init_PWM:
0x023B	0x0008      	RETURN
; end of _init_PWM
_main:
;receiver.c,68 :: 		void main() {
;receiver.c,70 :: 		int i=0;
0x023C	0x0020      	MOVLB      0
0x023D	0x01BA      	CLRF       main_i_L0
0x023E	0x01BB      	CLRF       main_i_L0+1
;receiver.c,71 :: 		OSCCON = 0x78; //16 MHz clock
0x023F	0x3078      	MOVLW      120
0x0240	0x0021      	MOVLB      1
0x0241	0x0099      	MOVWF      OSCCON
;receiver.c,72 :: 		INTCON = 0;
0x0242	0x018B      	CLRF       INTCON
;receiver.c,73 :: 		TRISA = 0xEB;TRISB=0xFF;//RA4,RA2 are out
0x0243	0x30EB      	MOVLW      235
0x0244	0x008C      	MOVWF      TRISA
0x0245	0x30FF      	MOVLW      255
0x0246	0x008D      	MOVWF      TRISB
;receiver.c,74 :: 		TRISC = 0x86;//RC6,RC5,RC4,and RC0 are out
0x0247	0x3086      	MOVLW      134
0x0248	0x008E      	MOVWF      TRISC
;receiver.c,75 :: 		NSS = 1;
0x0249	0x0020      	MOVLB      0
0x024A	0x140E      	BSF        PORTC, 0
;receiver.c,76 :: 		ANSELA = 0x00;
0x024B	0x0023      	MOVLB      3
0x024C	0x018C      	CLRF       ANSELA
;receiver.c,77 :: 		ANSELB = 0x00;
0x024D	0x018D      	CLRF       ANSELB
;receiver.c,78 :: 		ANSELC = 0x00;
0x024E	0x018E      	CLRF       ANSELC
;receiver.c,79 :: 		C1ON_BIT = 0;
0x024F	0x0022      	MOVLB      2
0x0250	0x1391      	BCF        C1ON_bit, 7
;receiver.c,80 :: 		C2ON_BIT = 0;
0x0251	0x1393      	BCF        C2ON_bit, 7
;receiver.c,81 :: 		Soft_SPI_Init();
0x0252	0x221E      	CALL       _Soft_SPI_Init
;receiver.c,82 :: 		SSP1STAT |= 0x40;   //data sent on falling edge
0x0253	0x0024      	MOVLB      4
0x0254	0x1714      	BSF        SSP1STAT, 6
;receiver.c,83 :: 		init_PWM();
0x0255	0x2227      	CALL       _init_PWM
;receiver.c,84 :: 		init_receiver();
0x0256	0x21AD      	CALL       _init_receiver
;receiver.c,85 :: 		Uart1_Init(9600);
0x0257	0x0023      	MOVLB      3
0x0258	0x159F      	BSF        BAUDCON, 3
0x0259	0x30A0      	MOVLW      160
0x025A	0x009B      	MOVWF      SPBRG
0x025B	0x3001      	MOVLW      1
0x025C	0x009C      	MOVWF      SPBRG+1
0x025D	0x151E      	BSF        TXSTA, 2
0x025E	0x214B      	CALL       _UART1_Init
;receiver.c,93 :: 		while(1){
L_main0:
;receiver.c,94 :: 		receive(stuff);
0x025F	0x3030      	MOVLW      main_stuff_L0
0x0260	0x0020      	MOVLB      0
0x0261	0x00BC      	MOVWF      FARG_receive_info
0x0262	0x3000      	MOVLW      hi_addr(main_stuff_L0)
0x0263	0x00BD      	MOVWF      FARG_receive_info+1
0x0264	0x217B      	CALL       _receive
;receiver.c,95 :: 		for(i=0;i<PAYLOADSIZE;i++){
0x0265	0x01BA      	CLRF       main_i_L0
0x0266	0x01BB      	CLRF       main_i_L0+1
L_main2:
0x0267	0x3080      	MOVLW      128
0x0268	0x063B      	XORWF      main_i_L0+1, 0
0x0269	0x00F0      	MOVWF      R0
0x026A	0x3080      	MOVLW      128
0x026B	0x0270      	SUBWF      R0, 0
0x026C	0x1D03      	BTFSS      STATUS, 2
0x026D	0x2A70      	GOTO       L__main13
0x026E	0x3005      	MOVLW      5
0x026F	0x023A      	SUBWF      main_i_L0, 0
L__main13:
0x0270	0x1803      	BTFSC      STATUS, 0
0x0271	0x2A86      	GOTO       L_main3
;receiver.c,96 :: 		Uart1_Write(stuff[i]);
0x0272	0x083A      	MOVF       main_i_L0, 0
0x0273	0x00F0      	MOVWF      R0
0x0274	0x083B      	MOVF       main_i_L0+1, 0
0x0275	0x00F1      	MOVWF      R1
0x0276	0x35F0      	LSLF       R0, 1
0x0277	0x0DF1      	RLF        R1, 1
0x0278	0x3030      	MOVLW      main_stuff_L0
0x0279	0x0770      	ADDWF      R0, 0
0x027A	0x0084      	MOVWF      FSR0
0x027B	0x3000      	MOVLW      hi_addr(main_stuff_L0)
0x027C	0x3D71      	ADDWFC     R1, 0
0x027D	0x0085      	MOVWF      FSR0H
0x027E	0x0800      	MOVF       INDF0, 0
0x027F	0x00BC      	MOVWF      FARG_UART1_Write_data_
0x0280	0x220B      	CALL       _UART1_Write
;receiver.c,95 :: 		for(i=0;i<PAYLOADSIZE;i++){
0x0281	0x0020      	MOVLB      0
0x0282	0x0ABA      	INCF       main_i_L0, 1
0x0283	0x1903      	BTFSC      STATUS, 2
0x0284	0x0ABB      	INCF       main_i_L0+1, 1
;receiver.c,97 :: 		}
0x0285	0x2A67      	GOTO       L_main2
L_main3:
;receiver.c,98 :: 		delay_ms(50);
0x0286	0x3002      	MOVLW      2
0x0287	0x00FB      	MOVWF      R11
0x0288	0x3004      	MOVLW      4
0x0289	0x00FC      	MOVWF      R12
0x028A	0x30BA      	MOVLW      186
0x028B	0x00FD      	MOVWF      R13
L_main5:
0x028C	0x0BFD      	DECFSZ     R13, 1
0x028D	0x2A8C      	GOTO       L_main5
0x028E	0x0BFC      	DECFSZ     R12, 1
0x028F	0x2A8C      	GOTO       L_main5
0x0290	0x0BFB      	DECFSZ     R11, 1
0x0291	0x2A8C      	GOTO       L_main5
0x0292	0x0000      	NOP
;receiver.c,99 :: 		}
0x0293	0x2A5F      	GOTO       L_main0
;receiver.c,100 :: 		}
L_end_main:
0x0294	0x2A94      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [5]    _Delay_1us
0x0008       [5]    _Delay_22us
0x000D      [29]    _Soft_SPI_Write
0x002A      [42]    _Mul_16x16_U
0x0054       [5]    _Delay_10us
0x0059      [12]    _singlewrite
0x0065       [8]    _PWM2_Start
0x006D       [8]    _PWM1_Start
0x0075      [53]    _PWM2_Set_Duty
0x00AA       [5]    _PWM1_Init
0x00AF      [53]    _PWM1_Set_Duty
0x00E4       [5]    _PWM2_Init
0x00E9      [16]    _clear_fifo
0x00F9      [40]    _Soft_SPI_Read
0x0121      [42]    _burstwrite
0x014B      [48]    _UART1_Init
0x017B      [50]    _receive
0x01AD      [94]    _init_receiver
0x020B      [10]    _UART1_Write
0x0215       [9]    ___CC2DW
0x021E       [9]    _Soft_SPI_Init
0x0227      [21]    _init_PWM
0x023C      [89]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF0
0x0001       [1]    INDF1
0x0003       [1]    STATUS
0x0004       [1]    FSR0L
0x0005       [1]    FSR0H
0x0006       [1]    FSR1L
0x0007       [1]    FSR1H
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PORTA
0x000D       [0]    SoftSpi_CLK
0x000D       [0]    RB6_bit
0x000D       [0]    SoftSpi_SDI
0x000D       [0]    RB4_bit
0x000E       [0]    RC7_bit
0x000E       [0]    SoftSpi_SDO
0x000E       [1]    PORTC
0x0011       [1]    PIR1
0x001B       [1]    PR2
0x001C       [1]    T2CON
0x0020       [4]    _UART_Rd_Ptr
0x0024       [4]    _UART_Wr_Ptr
0x0028       [4]    _UART_Tx_Idle_Ptr
0x002C       [4]    _UART_Rdy_Ptr
0x0030      [10]    main_stuff_L0
0x003A       [2]    main_i_L0
0x003C       [2]    FARG_receive_info
0x003C       [1]    FARG_UART1_Write_data_
0x003C       [6]    init_receiver_freq_L0
0x003E       [2]    receive_j_L0
0x0040       [2]    receive_buffer_L0
0x0042       [4]    init_receiver_sync_L0
0x0046       [4]    init_receiver_datarate_L0
0x004A       [2]    FARG_burstwrite_address
0x004A       [4]    FARG_PWM2_Init_PWM_Freq
0x004A       [1]    FARG_Soft_SPI_Read_sdata
0x004A       [1]    FARG_PWM2_Set_Duty_new_duty
0x004A       [1]    FARG_PWM1_Set_Duty_new_duty
0x004A       [4]    FARG_PWM1_Init_PWM_Freq
0x004B       [1]    Soft_SPI_Read_i_L0
0x004C       [2]    FARG_burstwrite_value
0x004E       [2]    FARG_burstwrite_length
0x0050       [2]    burstwrite_i_L0
0x0052       [2]    FARG_singlewrite_address
0x0054       [2]    FARG_singlewrite_value
0x0056       [1]    FARG_Soft_SPI_Write_sdata
0x0057       [1]    Soft_SPI_Write_i_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x008C       [1]    TRISA
0x008D       [0]    TRISB6_bit
0x008D       [1]    TRISB
0x008D       [0]    SoftSpi_SDI_Direction
0x008D       [0]    TRISB7_bit
0x008D       [0]    TRISB4_bit
0x008D       [0]    TRISB5_bit
0x008D       [0]    SoftSpi_CLK_Direction
0x008E       [0]    TRISC3_bit
0x008E       [0]    TRISC7_bit
0x008E       [0]    TRISC5_bit
0x008E       [0]    SoftSpi_SDO_Direction
0x008E       [1]    TRISC
0x0099       [1]    OSCCON
0x0111       [0]    C1ON_bit
0x0113       [0]    C2ON_bit
0x018C       [1]    ANSELA
0x018D       [1]    ANSELB
0x018E       [1]    ANSELC
0x0199       [1]    RCREG
0x019A       [1]    TXREG
0x019B       [2]    SPBRG
0x019C       [1]    SPBRGH
0x019D       [1]    RCSTA
0x019E       [1]    TXSTA
0x019F       [1]    BAUDCON
0x0214       [1]    SSP1STAT
0x0291       [1]    CCPR1L
0x0293       [1]    CCP1CON
0x0298       [1]    CCPR2L
0x029A       [1]    CCP2CON
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_burstwrite6
  L_burstwrite7
  L_receive8
  L_receive9
  L_receive10
  L_receive11
  L_end_main
  _main
  L__main13
  L_end_init_PWM
  _init_PWM
  L_end_stop
  _stop
  L__stop16
  L__stop17
  L__stop18
  L__stop19
  L__stop20
  L__stop21
  L_end_setLeft
  _setLeft
  L__setLeft23
  L__setLeft24
  L__setLeft25
  L__setLeft26
  L__setLeft27
  L__setLeft28
  L_end_setRight
  _setRight
  L__setRight30
  L__setRight31
  L__setRight32
  L__setRight33
  L__setRight34
  L__setRight35
  L_end_singlewrite
  _singlewrite
  L_end_burstwrite
  _burstwrite
  L__burstwrite38
  L_end_clear_fifo
  _clear_fifo
  L_end_init_receiver
  _init_receiver
  L_end_receive
  _receive
  L__receive42
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8x8_U
  _Mul_8x8_U
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_end_PWM1_Init
  _PWM1_Init
  L_end_PWM1_Set_Duty
  _PWM1_Set_Duty
  L__PWM1_Set_Duty2
  L__PWM1_Set_Duty3
  L__PWM1_Set_Duty4
  L__PWM1_Set_Duty5
  L_end_PWM1_Start
  _PWM1_Start
  L_end_PWM1_Stop
  _PWM1_Stop
  L_end_PWM2_Init
  _PWM2_Init
  L_end_PWM2_Set_Duty
  _PWM2_Set_Duty
  L__PWM2_Set_Duty10
  L__PWM2_Set_Duty11
  L__PWM2_Set_Duty12
  L__PWM2_Set_Duty13
  L_end_PWM2_Start
  _PWM2_Start
  L_end_PWM2_Stop
  _PWM2_Stop
  L_end_PWM3_Init
  _PWM3_Init
  L_end_PWM3_Set_Duty
  _PWM3_Set_Duty
  L__PWM3_Set_Duty18
  L__PWM3_Set_Duty19
  L__PWM3_Set_Duty20
  L__PWM3_Set_Duty21
  L_end_PWM3_Start
  _PWM3_Start
  L_end_PWM3_Stop
  _PWM3_Stop
  L_end_PWM4_Init
  _PWM4_Init
  L_end_PWM4_Set_Duty
  _PWM4_Set_Duty
  L__PWM4_Set_Duty26
  L__PWM4_Set_Duty27
  L__PWM4_Set_Duty28
  L__PWM4_Set_Duty29
  L_end_PWM4_Start
  _PWM4_Start
  L_end_PWM4_Stop
  _PWM4_Stop
  L_Soft_SPI_Write0
  L_Soft_SPI_Write1
  L_Soft_SPI_Read2
  L_Soft_SPI_Read3
  L_Soft_SPI_Read4
  L_end_Soft_SPI_Init
  _Soft_SPI_Init
  L_end_Soft_SPI_Write
  _Soft_SPI_Write
  L__Soft_SPI_Write7
  L__Soft_SPI_Write8
  L_end_Soft_SPI_Read
  _Soft_SPI_Read
  L__Soft_SPI_Read10
  L__Soft_SPI_Read11
  L_CA2A_Loop
  L_CA2AW_Loop
  L_CS2S_Loop
  L_CS2S_End
  L_FZinS_Loop
  L_FZinS_End
  _CC2D_Loop1
  _CC2DL_Loop1
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2A
  ___CA2A
  L_end___CA2AW
  ___CA2AW
  L_end___CS2S
  ___CS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
